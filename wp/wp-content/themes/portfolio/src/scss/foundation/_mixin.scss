//------------------------------------------------------------
// easing
//------------------------------------------------------------
// sine
$ease-in-sine:cubic-bezier(0.47, 0, 0.745, 0.715);
$ease-out-sine:cubic-bezier(0.39, 0.575, 0.565, 1);
$ease-in-out-sine:cubic-bezier(0.445, 0.05, 0.55, 0.95);

// quad
$ease-in-quad:cubic-bezier(0.55, 0.085, 0.68, 0.53);
$ease-out-quad:cubic-bezier(0.25, 0.46, 0.45, 0.94);
$ease-in-out-quad:cubic-bezier(0.455, 0.03, 0.515, 0.955);

// cubic
$ease-in-cubic:cubic-bezier(0.55, 0.055, 0.675, 0.19);
$ease-out-cubic:cubic-bezier(0.215, 0.61, 0.355, 1);
$ease-in-out-cubic:cubic-bezier(0.645, 0.045, 0.355, 1);

// quart
$ease-in-quart:cubic-bezier(0.895, 0.03, 0.685, 0.22);
$ease-out-quart:cubic-bezier(0.165, 0.84, 0.44, 1);
$ease-in-out-quart:cubic-bezier(0.77, 0, 0.175, 1);

// quint
$ease-in-quint:cubic-bezier(0.755, 0.05, 0.855, 0.06);
$ease-out-quint:cubic-bezier(0.23, 1, 0.32, 1);
$ease-in-out-quint:cubic-bezier(0.86, 0, 0.07, 1);

// expo
$ease-in-expo:cubic-bezier(0.95, 0.05, 0.795, 0.035);
$ease-out-expo:cubic-bezier(0.19, 1, 0.22, 1);
$ease-in-out-expo:cubic-bezier(1, 0, 0, 1);

// circ
$ease-in-circ:cubic-bezier(0.6, 0.04, 0.98, 0.335);
$ease-out-circ:cubic-bezier(0.075, 0.82, 0.165, 1);
$ease-in-out-circ:cubic-bezier(0.785, 0.135, 0.15, 0.86);

// back
$ease-in-back:cubic-bezier(0.6, -0.28, 0.735, 0.045);
$ease-out-back:cubic-bezier(0.175, 0.885, 0.32, 1.275);
$ease-in-out-back:cubic-bezier(0.68, -0.55, 0.265, 1.55);


// -------------------------------------
// break-point
// -------------------------------------

$breakpoints: (
  'sm': 'screen and (min-width: 500px)',
  'md': 'screen and (min-width: 768px)',
  'lg': 'screen and (min-width: 1000px)',
  'xl': 'screen and (min-width: 1366px)',
) !default;

//'md'を初期値に設定（スマホファースト）

@mixin mq($breakpoint: md) {
    @media #{map-get($breakpoints, $breakpoint)} {
      @content;
    }
  }

//   呼び出すとき
//   .foo {
//     color: blue;
//     @include mq() { // 引数を省略（初期値はmdの768px）
//       color: yellow;
//     }
//     @include mq(lg) { // 引数を個別に指定
//       color: red;
//     }
//   }

// -------------------------------------
// arrow_anime
// -------------------------------------

//sp
@mixin arrow_anime($direction:column,$deg:-45deg,$padding:26px,$arrow-width:8px,$border:$main-color) {
  position: relative;
  padding: 40px;
  border: solid 1px $border;
  border-radius: 50%;
  display: block;
  div {
    position: absolute;
    top: 0px;
    bottom: 0;
    right: 0;
    left: 0;
    margin: auto;
    padding: $padding;
    display: flex;
    flex-direction: $direction;
    align-items: center;
  }
  span {
      width: $arrow-width;
      height: $arrow-width;
      border-left: 1px solid $border;
      border-bottom: 1px solid $border;
      transform: rotate($deg);
      animation: sdb 2s infinite $cubic;
      opacity: 0;
      box-sizing: border-box;
    }
   
}

//animation
@mixin arrow_anime_animation($position:top) {
  @for $arrow from 1 through 3 {
    span:nth-of-type(#{$arrow}) {
      animation-delay: ($arrow - 1) * .15s ;
      $position: ($arrow - 1) * 16px;
    }
  }
  @keyframes sdb {
    0% {opacity: 0; }
    50% {opacity: 1;}
    100% { opacity: 0;}
  } 
}


//pc
@mixin arrow_anime_pc {
  @include mq(md) { 
    padding: 79px;
    div{
      padding: 56px 56px 64px 56px;
    }
    span{
      width: 12px;
      height: 12px;
    }
  }
}




